{"version":3,"sources":["components/Style.module.css","redux/contact-action.js","components/Form.jsx","components/ContactList.jsx","components/Filter.jsx","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","AddContact","createAction","name","number","payload","id","uuidv4","deleteContact","filteredContact","Form","state","nameInputId","numberInputId","handleChange","event","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmitData","reset","onSubmit","this","className","style","form","htmlFor","type","pattern","title","required","onChange","input","btn","Component","connect","dispatch","data","filter","items","normaliseNameContact","toLowerCase","contacts","contact","includes","onDeteleContact","list","undefined","map","item","onClick","e","target","App","wrapper","formSubmitData","createReducer","console","log","find","alert","_","combineReducers","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e0dfd99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Style_wrapper__3HBUC\",\"form\":\"Style_form__y-ZB_\",\"input\":\"Style_input__1vvNq\",\"btn\":\"Style_btn__1WIh6\",\"filter\":\"Style_filter__8nqIZ\",\"list\":\"Style_list__34XfG\",\"item\":\"Style_item__1rqqk\"};","// import types from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst AddContact = createAction('contact/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/delete');\r\n\r\nconst filteredContact = createAction('contact/filter');\r\n\r\nexport { AddContact, deleteContact, filteredContact };\r\n\r\n// ========redux action withuout redux-toolkit=========//\r\n\r\n// const AddContact = ({ name, number }) => ({\r\n//   type: types.ADD_CONTACT,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//   type: types.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filteredContact = value => ({\r\n//   type: types.FILTER_CONTACT,\r\n//   payload: value,\r\n// });\r\n\r\n//===================================================//\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AddContact } from '../redux/contact-action';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './Style.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmitData(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={style.form}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Phone:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmitData: data => dispatch(AddContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './Style.module.css';\r\nimport { deleteContact } from '../redux/contact-action';\r\n\r\nconst ContactList = ({ contacts, onDeteleContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts !== undefined &&\r\n      contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={style.item}>\r\n          {name}: {number};\r\n          <button onClick={() => onDeteleContact(id)}>Delete contact</button>\r\n        </li>\r\n      ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state;\r\n  const normaliseNameContact = filter.toLowerCase();\r\n  const filteredContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normaliseNameContact),\r\n  );\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeteleContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './Style.module.css';\r\nimport { filteredContact } from '../redux/contact-action';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={style.filter}>\r\n    Filter by name:\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(filteredContact(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport Form from './components/Form.jsx';\r\nimport ContactList from './components/ContactList.jsx';\r\nimport Filter from './components/Filter.jsx';\r\nimport style from './components/Style.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={style.wrapper}>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmitData={this.formSubmitData} />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { AddContact, deleteContact, filteredContact } from './contact-action';\r\n\r\nconst items = createReducer([], {\r\n  [AddContact]: (state, { payload }) => {\r\n    console.log(payload);\r\n    const { name } = payload;\r\n    const isFinded = state.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isFinded) {\r\n      alert('Контакт уже есть в списке !');\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filteredContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// ========redux redusers withuout redux-toolkit=========//\r\n\r\n// import types from './types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       const { name } = payload;\r\n//       const isFinded = state.find(\r\n//         contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n//       );\r\n//       if (isFinded) {\r\n//         alert('Контакт уже есть в списке !');\r\n//         return state;\r\n//       }\r\n//       return [payload, ...state];\r\n//     case types.DELETE_CONTACT:\r\n//       return state.filter(contact => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CONTACT:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport combineReducers from './contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: combineReducers,\r\n  devTools: true,\r\n});\r\n\r\nexport default store;\r\n\r\n// ========redux store withuout redux-toolkit=========//\r\n\r\n// import { createStore } from 'redux';\r\n\r\n// const store = createStore(\r\n//   contactReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n\r\n//======================================================//\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}